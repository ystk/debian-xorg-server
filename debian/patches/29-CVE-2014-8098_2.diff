From be09e0c988ffdb0371293af49fb4ea8f49ed324a Mon Sep 17 00:00:00 2001
From: Julien Cristau <jcristau@debian.org>
Date: Mon, 10 Nov 2014 12:13:41 -0500
Subject: glx: Length checking for GLXRender requests (v2) [CVE-2014-8098 2/8]

v2:
Remove can't-happen comparison for cmdlen < 0 (Michal Srb)

Reviewed-by: Adam Jackson <ajax@redhat.com>
Reviewed-by: Michal Srb <msrb@suse.com>
Reviewed-by: Andy Ritger <aritger@nvidia.com>
Signed-off-by: Julien Cristau <jcristau@debian.org>
Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>

[hertzog@debian.org: Backported to apply on version 1.7.7]
--- a/glx/glxcmds.c
+++ b/glx/glxcmds.c
@@ -1915,7 +1915,7 @@ int __glXDisp_Render(__GLXclientState *c
     left = (req->length << 2) - sz_xGLXRenderReq;
     while (left > 0) {
         __GLXrenderSizeData entry;
-        int extra;
+        int extra = 0;
 	__GLXdispatchRenderProcPtr proc;
 	int err;
 
@@ -1934,6 +1934,9 @@ int __glXDisp_Render(__GLXclientState *c
 	cmdlen = hdr->length;
 	opcode = hdr->opcode;
 
+        if (left < cmdlen)
+            return BadLength;
+
 	/*
 	** Check for core opcodes and grab entry data.
 	*/
@@ -1947,6 +1950,10 @@ int __glXDisp_Render(__GLXclientState *c
 	    return __glXError(GLXBadRenderRequest);
 	}
 
+        if (cmdlen < entry.bytes) {
+            return BadLength;
+        }
+
         if (entry.varsize) {
             /* variable size command */
             extra = (*entry.varsize)(pc + __GLX_RENDER_HDR_SIZE,
@@ -1954,16 +1961,9 @@ int __glXDisp_Render(__GLXclientState *c
             if (extra < 0) {
                 return BadLength;
             }
-            if (cmdlen != __GLX_PAD(entry.bytes + extra)) {
-                return BadLength;
-            }
-        } else {
-            /* constant size command */
-            if (cmdlen != __GLX_PAD(entry.bytes)) {
-                return BadLength;
-            }
         }
-	if (left < cmdlen) {
+
+	if (cmdlen != safe_pad(safe_add(entry.bytes, extra))) {
 	    return BadLength;
 	}
 
