From 13d36923e0ddb077f4854e354c3d5c80590b5d9d Mon Sep 17 00:00:00 2001
From: Adam Jackson <ajax@redhat.com>
Date: Mon, 10 Nov 2014 12:13:39 -0500
Subject: glx: Fix image size computation for EXT_texture_integer
 [CVE-2014-8098 1/8]

Without this we'd reject the request with BadLength.  Note that some old
versions of Mesa had a bug in the same place, and would _send_ zero
bytes of image data; these will now be rejected, correctly.

Reviewed-by: Keith Packard <keithp@keithp.com>
Reviewed-by: Julien Cristau <jcristau@debian.org>
Reviewed-by: Michal Srb <msrb@suse.com>
Reviewed-by: Andy Ritger <aritger@nvidia.com>
Signed-off-by: Adam Jackson <ajax@redhat.com>
Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>

--- a/glx/rensize.c
+++ b/glx/rensize.c
@@ -212,6 +212,11 @@ int __glXImageSize( GLenum format, GLenu
 	  case GL_ALPHA:
 	  case GL_LUMINANCE:
 	  case GL_INTENSITY:
+        case GL_RED_INTEGER_EXT:
+        case GL_GREEN_INTEGER_EXT:
+        case GL_BLUE_INTEGER_EXT:
+        case GL_ALPHA_INTEGER_EXT:
+        case GL_LUMINANCE_INTEGER_EXT:
 	    elementsPerGroup = 1;
 	    break;
 	  case GL_422_EXT:
@@ -222,14 +227,19 @@ int __glXImageSize( GLenum format, GLenu
 	  case GL_DEPTH_STENCIL_MESA:
 	  case GL_YCBCR_MESA:
 	  case GL_LUMINANCE_ALPHA:
+        case GL_LUMINANCE_ALPHA_INTEGER_EXT:
 	    elementsPerGroup = 2;
 	    break;
 	  case GL_RGB:
 	  case GL_BGR:
+        case GL_RGB_INTEGER_EXT:
+        case GL_BGR_INTEGER_EXT:
 	    elementsPerGroup = 3;
 	    break;
 	  case GL_RGBA:
 	  case GL_BGRA:
+        case GL_RGBA_INTEGER_EXT:
+        case GL_BGRA_INTEGER_EXT:
 	  case GL_ABGR_EXT:
 	    elementsPerGroup = 4;
 	    break;
